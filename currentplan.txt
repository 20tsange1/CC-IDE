Change analysis -> Static Analysis + Dynamic Analysis
New page for static analysis.
Dynamic analysis to be run alongside parser.

-> We also don't want our analysis to be directly built into the parsing. We don't want conflicts, keep it separate, keep it isolated.
-> Analysis may tamper with the root tree, we don't want that.


Complete event simulation, make it a type of static anaylsis.

Add in the ability to remember which grammar is being used. Makes it easier to then also change how colours are saved, make it grammar specific.

Add in PDF view in visualiser. + Template with HTML, then filling in.

Write up first draft / outline for diss.

Comments on Comments:

- Folding editor may be way too granular, i.e. way too many nodes to be able to split it at node level. Maybe up to a certain depth?
-> idea would be to assign each node a unique ID. Then from that, you will have to relay that back to the parser and BUI.
-> Then from the BUI, you would be able to press the node and then only things from that node onwards will be shown. Backend means that you use that ID as a flag, if parent not ID or self not ID, then don't show. This gets kinda hard to manage but definitely doable?

-> How about. Adding node ID, which triggers a flag in the explore method.
-> Which can then be reset.

- Shift to here would be fine, definitely not important if it takes too long


- Need print view, currently implementing.
-> Add into visualisation tab, some type of PDF form?
-> I'm thinking of HTML template with some sort of rendering such that the contract goes directly in. 
-> But then you need to think about sub-titles and such.

-> Add in HTML template which you can pick, and then render the template with the contract inside.
-> Ignore subtitles for now.





#########

Framework Based IDE
-> Plugins
-> Variety of Languages
-> Build and add on top

Plugin Based IDE
-> You choose the legal language being used.
-> You then choose from / contribute to a library of analyses + visualisations + more developed for that legal language.
-> Some may be general and suitable for all legal languages, some may only be for a certain grammar.

If you look at how VSC and other IDEs work, a similar idea is implemented. You download the coding languages and relevant plugins, allowing you to develop in that language more effectively and efficiently.

Also provides the opportunity for a community to form, as opposed to a siloed development group. So many languages exist, why keep it to yourself?

-> Speeding up the development process tenfold, providing the perfect tool for an iterative approach.

When developing a legal language, you have to ask yourself:
1. Is this language suit for it's purpose? Does it allow us to write contracts the way we want to?
2. Is this language complete? Does it cover what we want it to? Is it correctly written?
3. Can this language be evaluated?



########

Version Control

Actually quite simple in concept?
-> Use git, run automated workflows, checking for consistency, ensuring grammar is correct, ensuring alignment + no loss of information.
-> Keeps versions, name versions, provide comments, provide messages.
-> Change the wording, but you don't change the cooncept (from coders to lawyers)

-> You'd basically just need to package git into a new form. Automate pushes, commits, and so forth.
-> Hardest part is probably problems with merging and out-of-date versions that need reconconciliation. Maybe just force?


########

Event Simulation

Clauses and sub-clauses connected by C-AND

You can basically create depth by connecting different "contracts" and build up depth in conditions. 

-> [1] IF [2], [2] IF [3] OR [4], [3] IF [5] ...

-> Are we looking at evaluation of a contract, a clause or? 
-> What is our actual goal of the contract, what is our goal of the simulation?


########

Contract Metadata (Metadata in general)

Store information about the contract, language, date, time, so on.
Extend with languages too.


#######

Formatting

Right now I use direct formatting, adding HTML formatting and then adding the text, shouldn't I be making subsections in HTML with the class, and then adding formatting to the class?