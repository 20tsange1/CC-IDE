 <contract> 
::= <component> (C-AND <component>)*
 ;

<component> 
CC::= <component-definition> 
 | <conditional-definition>
 | <component-statement> 
 | <conditional-statement>
 ;

<component-definition> 
::= <definition> (AND <definition>)*
 ;

<definition> 
::= <ID> <subject> IS <subject>
 | <ID> <subject> EQUALS <numerical-expression>
 ;

<numerical-expression> 
L::= <num>
 | <numerical-object>
 | <numerical-expression> <operator> <numerical-expression>
 ;

<operator> 
::= PLUS
 | MINUS
 | TIMES
 | DIVIDE
 ;

<conditional-definition> 
::= <component-definition> IF <component-condition>
 | IF <component-condition> THEN <component-definition>
 | <component-definition> IF <component-condition> <else> <component-definition>
 | IF <component-condition> THEN <component-definition> <else> <component-definition>
 ;

<component-statement>
::= <statement> (AND <statement>)* (OR <statement>)*
 ;

<conditional-statement> 
::= <component-statement> IF <condition>
 | IF <component-condition> THEN <component-statement>
 | <component-statement> IF <component-condition> <else> <component-statement>
 | IF <component-condition> THEN <component-statement> <else> <component-statement>
 ;

<else>
::= (ELSE | OTHERWISE)
;

<statement> 
R::= <ID> <holds>? <subject> <modal-verb> <verb> <object> <receiver> <date>
 | <ID> <holds>? <subject> <date> <modal-verb> <verb> <object> <receiver>
 | <ID> <holds>? <date> <subject> <modal-verb> <verb> <object> <receiver>
 | <ID> <holds>? <subject> <verb-status> <object> <receiver> <date>
 ;

<component-condition> 
R::= <condition> (OR <condition>)* (AND <condition>)*
 ;

<condition> 
R::= <ID> <holds>? <subject> <verb-status> <object> <receiver> <date>
 | <ID> <holds>? <subject> <date> <verb-status> <object> <receiver>
 | <ID> <holds>? <date> <subject> <verb-status> <object> <receiver>
 | <ID> <holds>? <subject> <modal-verb> <verb> <object> <receiver> <date>
 | <ID> <holds>? <boolean-expression>
 ;

<boolean-expression> 
::= <subject> <verb-status> <comparison> <subject>
 ;

<ID> 
R::= [ <num> ]
 | [ <num> ( <num> ) ]
 ;

<holds> 
::= it is the case that
 | it is not the case that
 ;

<subject> 
::= <string>
 ;

<verb> 
::= deliver
 | pay
 | charge
 | refund
 ;

<verb-status> 
::= delivered
 | paid
 | charged
 | refunded
 ;

<comparison> 
::= less than
 | <equal>
 | <more-than>
 ;

<equal> 
::= equals
 | equal to
 ;

<more-than> 
::= more than
 | greater than
 ;

<modal-verb> 
::= <obligation>
 | may
 | is forbidden to
 ;

<obligation> 
::= shall
 | must
 ;

<date> 
::= <specific-date>
 | on ANYDATE
 | on SOMEDATE <subject>
 | on THEDATE <subject>
 | <temporal-quantifier> <num> <month> <num>
 | <temporal-quantifier> SOMEDATE <subject>
 | <temporal-quantifier> THEDATE <subject>
 | <temporal-offset> <temporal-quantifier> SOMEDATE <subject>
 | <temporal-offset> <temporal-quantifier> THEDATE <subject>
 | <temporal-quantifier> <temporal-offset> <temporal-quantifier> SOMEDATE <subject>
 | <temporal-quantifier> <temporal-offset> <temporal-quantifier> THEDATE <subject>
 ;

<temporal-quantifier> 
::= before
 | after
 ;

<specific-date> 
::= on the <num> <month> <num>
 | on <num> <month> <num>
 ;

<temporal-offset> 
::= <num> day
 | <num> week
 | <num> year
 | <num> days
 | <num> weeks
 | <num> years
 ;

<month> 
::= January
 | February
 | March
 | April
 | May
 | June
 | July
 | August
 | September
 | October
 | November
 | December
 ;

<object> 
::= <numerical-object>
 | <nonnumerical-object>
 ;

<numerical-object> 
::= <pounds> <num>
 | <dollars> <num>
 | <euros> <num>
 | AMOUNT <subject>
 ;

<nonnumerical-object> 
::= SOMECURRENCY <string>
 | REPORT <string>
 | NAMEDOBJECT <string>
 | OTHEROBJECT <string>
 ;

<pounds> 
::= GBP
 | POUNDS
 | quid
 ;

<dollars> 
::= USD
 | DOLLARS
 | buck
 ;

<euros> 
::= EUR
 | EUROS
 ;

<receiver> 
::= to <subject>
 ;

<string> ::= /[a-zA-Z]+/
 ;

<num> ::= /[0-9]+/
 ;
